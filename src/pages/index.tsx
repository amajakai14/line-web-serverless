import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";

import { api } from "../utils/api";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Restaurant Manager</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen bg-slate-50">
        <Navbar />
        <div className="px-4 pt-2 md:px-10 md:pt-10">
          <FirstImpression />
        </div>
      </main>
    </>
  );
};

export default Home;

const FirstImpression: React.FC = () => {
  return (
    <div className="flex ">
      <h1 className="mx-auto text-start text-sm md:text-lg lg:w-1/2 lg:text-3xl">
        Powering customer can now experience{" "}
        <span className="text-red-600">real-time</span> interaction when
        ordering from buffet menus. CRM for restaurant to improve overall
        services and customer satisfaction Experience the future of dining
        today!
      </h1>
      <div className="mx-auto px-4 text-start lg:w-1/2">
        some example picture
      </div>
    </div>
  );
};

const HamburgerMenu: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const genericHamburgerLine = `h-1 w-6 my-1 rounded-full bg-black transition ease transform duration-300`;

  return (
    <nav className="w-full bg-violet-500 px-4 pt-2 md:hidden">
      <div>
        <button
          onClick={() => {
            setIsOpen(!isOpen);
          }}
          className="group flex h-12 w-12 flex-col items-start justify-start rounded  border-black"
        >
          <div
            className={`${genericHamburgerLine} ${
              isOpen
                ? "translate-y-3 rotate-45 opacity-50 group-hover:opacity-100"
                : "opacity-50 group-hover:opacity-100"
            }`}
          ></div>
          <div
            className={`${genericHamburgerLine} ${
              isOpen ? "opacity-0" : "opacity-50 group-hover:opacity-100"
            }`}
          ></div>
          <div
            className={`${genericHamburgerLine} ${
              isOpen
                ? "-translate-y-3 -rotate-45 opacity-50 group-hover:opacity-100"
                : "opacity-50 group-hover:opacity-100"
            }`}
          ></div>
        </button>
      </div>
      <div
        className={`w-full transition-all duration-500 ease-in-out ${
          isOpen ? "invisible h-0" : "visible h-52"
        }`}
      >
        <ul className="flex flex-col transition-none duration-300">
          <li className="py-2">
            <Link
              href={"#"}
              className="block w-full text-white hover:bg-violet-600"
            >
              Products
            </Link>
          </li>
          <li className="py-2">
            <Link
              href={"/login"}
              className="block w-full text-white hover:bg-violet-600"
            >
              Login
            </Link>
          </li>
          <li className="py-2">
            <Link
              href={"/staff"}
              className="block w-full text-white hover:bg-violet-600"
            >
              Staff
            </Link>
          </li>
          <li className="py-2">
            <Link
              href={"/admin"}
              className="block w-full text-white hover:bg-violet-600"
            >
              Admin
            </Link>
          </li>
          <li className="py-2">
            <Link
              href={"#"}
              className="block w-full text-white hover:bg-violet-600"
            >
              Contact Us
            </Link>
          </li>
        </ul>
      </div>
    </nav>
  );
};

const Navbar: React.FC = () => {
  const staff = undefined;
  const admin = undefined;
  return (
    <>
      <HamburgerMenu />
      <nav className="hidden w-full bg-gray-800 md:block">
        <div className="mx-auto flex justify-between bg-violet-500 px-4 py-2">
          <div>some logo</div>
          <div className="flex ">
            <div>
              <ul className="flex items-center justify-center">
                <li className="px-4">
                  <Link
                    href={"#"}
                    className="block w-full text-white hover:bg-violet-600"
                  >
                    Products
                  </Link>
                </li>
                <li className="px-4">
                  <Link
                    href={"/login"}
                    className="block w-full text-white hover:bg-violet-600"
                  >
                    Login
                  </Link>
                </li>
                <li className="px-4">
                  <Link
                    href={"/staff"}
                    className="block w-full text-white hover:bg-violet-600"
                  >
                    Staff
                  </Link>
                </li>
                <li className="px-4">
                  <Link
                    href={"/admin"}
                    className="block w-full text-white hover:bg-violet-600"
                  >
                    Admin
                  </Link>
                </li>
                <li className="px-4">
                  <Link
                    href={"#"}
                    className="block w-full text-white hover:bg-violet-600"
                  >
                    Contact Us
                  </Link>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </nav>
    </>
  );
};

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && (
          <span>
            Logged in as{" "}
            {`${sessionData.user?.name},corporation id: ${sessionData.user?.corporation_id}, role: ${sessionData.user?.role}`}
          </span>
        )}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
